cmake_minimum_required(VERSION 2.8 FATAL_ERROR)

project(pcd_write)

find_package(PCL 1.2 REQUIRED)

include_directories(${PCL_INCLUDE_DIRS})

link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})

add_executable(pcd_write src/pcd_write.cpp)
add_executable(matrix_transform src/matrix_transform.cpp)
add_executable(passthrough src/passthrough.cpp)
add_executable(voxel_grid src/voxel_grid.cpp)
add_executable(statistical_removal src/statistical_removal.cpp)
add_executable(project_inliers src/project_inliers.cpp)
add_executable(extract_indices src/extract_indices.cpp)
add_executable(remove_outliers src/remove_outliers.cpp)
add_executable(concatenate src/concatenate.cpp)
add_executable(kdtree_search src/kdtree_search.cpp)
add_executable(octree_search  src/octree_search.cpp)
add_executable(octree_change_detection src/octree_change_detection.cpp)
add_executable(range_image_creation src/range_image_creation.cpp)
#add_executable(range_image_border_extraction src/range_image_border_extraction.cpp)
add_executable(normal_estimation src/normalestimation_using_integral_image.cpp)
add_executable(narf_feature_extraction src/narf_feature_extraction.cpp)

target_link_libraries(narf_feature_extraction ${PCL_LIBRARIES})
target_link_libraries(normal_estimation ${PCL_LIBRARIES})
#target_link_libraries(range_image_border_extraction ${PCL_LIBRARIES})
target_link_libraries(range_image_creation ${PCL_LIBRARIES})
target_link_libraries(octree_change_detection ${PCL_LIBRARIES})
target_link_libraries(octree_search ${PCL_LIBRARIES})
target_link_libraries(kdtree_search ${PCL_LIBRARIES})
target_link_libraries(concatenate ${PCL_LIBRARIES})
target_link_libraries(remove_outliers ${PCL_LIBRARIES})
target_link_libraries(extract_indices ${PCL_LIBRARIES})
target_link_libraries(project_inliers ${PCL_LIBRARIES})
target_link_libraries(statistical_removal ${PCL_LIBRARIES})
target_link_libraries(voxel_grid ${PCL_LIBRARIES})
target_link_libraries(pcd_write ${PCL_LIBRARIES})
target_link_libraries(matrix_transform ${PCL_LIBRARIES})
target_link_libraries(passthrough ${PCL_LIBRARIES})
